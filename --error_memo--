■0621) twitterクローン課題での指摘

①ログインしていない状態でトップページにアクセスした場合、ログインページにリダイレクトしてください。
>>toppageを削除してindex#tasksに飛ばす

②この課題でMicropostは扱いません。
>>micropostからtaskへ変更

③ユーザーログイン後は、root（/）へ遷移し、ログインユーザーが登録したタスクを一覧表示してください。
>>toppageを削除してindex#tasksに飛ばす

④ログインユーザが 自分自身が登録したタスク のみを操作 (CRUD) できるように、タスクにユーザの紐付けをしてください。
>>カリキュラムで確認　１対多

⑤ルーティング情報に過不足が無いか確認しましょう。  
>>ルーティング情報=Routerのもつ情報=routes.rbに記載の情報

==twitterクローン課題にて作成したmodel / controller / migrationファイル(toppage,microposts)やDBテーブル(microposts)が不要だった。


◎必要アクション
1.以下項目の削除
● modelファイルの削除
	=rails destroy model toppage（ファイル名）
	<完了>

● controllerファイルの削除
	=rails destroy controller toppages（ファイル名）
	<完了>

● migrationファイル
	=rails db:rollbackの実行
	>>ActiveRecord::UnknownMigrationVersionError: の発生
	=rails db:migrate:status　でマイグレーション状況の確認
	
	database: tasklist_development
	
	 Status   Migration ID    Migration Name
	--------------------------------------------------
	   up     20200604093149  Create tasks
	   up     20200608105117  Add status to tasks
	   up     20200617133000  Create users
	   up     20200618083125  ********** NO FILE **********
	
	=rails db:migrate:resetの実行　マイグレーションのリセット
	
	============================================
	※注意点
	当然、DBに入ってるデータは全て消えますので、実行環境に注意する必要がありますし
	必要ならばデータをバックアップする必要があります。
	
	無駄にあがいた結果、チームメンバーの中で一人だけ
	微妙にテーブル定義が異なる怪データベースが生成されてしまう可能性すらあります。
	============================================
	
	
	=rails db:migrate:status　でマイグレーションを状況の再度確認
	>>マイグレーションのリセット完了(20200618083125_create toppageの削除)
	s
	database: tasklist_development
	
	 Status   Migration ID    Migration Name
	--------------------------------------------------
	   up     20200604093149  Create tasks
	   up     20200608105117  Add status to tasks
	   up     20200617133000  Create users
	
	<完了>



●DBテーブル(tasklist_development/microposts)
	=rails c　の実行
	>ActiveRecord::Migration.drop_table(:microposts); でテーブル削除
	<完了>



2.routerの変更


3.controllerの修正


4.modelの修正


5.viewの修正


6.ユーザーの紐付け


7.ルーティング情報（routes.rb）に不要項目が入っていないか確認。
>>カリキュラムのrouteと比較する。







■rails cからテーブルに書き込みできない問題
>>9.投稿機能__9.1 Model__rails console で投稿を作成

ec2-user:~/environment/tasklist (master) $ rails c　＃ここで開始！
Running via Spring preloader in process 12308
Loading development environment (Rails 5.2.4.3)

2.5.3 :001 > user = User.first    ＃定義式をいれる                                                    
   (0.3ms)  SET NAMES utf8,  @@SESSION.sql_mode = CONCAT(CONCAT(@@sql_mode, ',STRICT_ALL_TABLES'), ',NO_AUTO_VALUE_ON_ZERO'),  @@SESSION.sql_auto_is_null = 0, @@SESSION.wait_timeout = 2147483
  User Load (0.2ms)  SELECT  `users`.* FROM `users` ORDER BY `users`.`id` ASC LIMIT 1
 => #<User id: 1, name: "taro", email: "taro@techacademy.jp", password_digest: "$2a$12$PkYGUM4LJpfMkXyS6ln3rOVPsIRhKKQmSqtolhOfRZ8...", created_at: "2020-06-21 05:58:13", updated_at: "2020-06-21 05:58:13"> 

2.5.3 :002 > tasks.user    ＃失敗！nameerror==tasksメソッドがない                                                           
Traceback (most recent call last):
        1: from (irb):2
NameError (undefined local variable or method `tasks' for main:Object)

2.5.3 :003 > user.tasks	＃成功！                     
  Task Load (0.2ms)  SELECT  `tasks`.* FROM `tasks` WHERE `tasks`.`user_id` = 1 LIMIT 11
 => #<ActiveRecord::Associations::CollectionProxy []> 

2.5.3 :004 > task = user.tasks.build(status:'started', content:'running') ＃項目入力できた！             
 => #<Task id: nil, content: "running", created_at: nil, updated_at: nil, status: "started", user_id: 1> 

2.5.3 :005 > task.save　＃保存
   (0.1ms)  BEGIN
  Task Create (0.5ms)  INSERT INTO `tasks` (`content`, `created_at`, `updated_at`, `status`, `user_id`) VALUES ('running', '2020-06-21 15:00:05', '2020-06-21 15:00:05', 'started', 1)
   (10.6ms)  COMMIT
 => true 

2.5.3 :006 > 





